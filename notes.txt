Backlog:
    -Clearer instructions on the site
    -Splash Page
    -SEO
    -More Categories
    -Custom sections and categories
    -More versatile for all users
    -Tech Docs/Github readme docs
    -SUPER ADMIN
    -Better error handling
    -Image Lightbox
    -Email change, make column for old emails
    -Documentation/Instructions to use the site, and for API
    -Resume Generator
    -Page site generator
    -Connect to other APIs like IFFFT or when you update, it updates this profile
    -Caching

Authentication
    -Model for the user or use General
    -Login and Registration

Forms for each part of the portfolio
    -General Info
    -Intro
    -About Me
    -Experience
    -Skills
    -Education
    -Project

Model
    -SQLite + SQLAlchemy
    -Change database to postgresql when deployed
    -Model App
    -GET (Providing service of everything above.)
    -POST, PUT, DELETE

Pages
    -Dashboard (All info displayed)
    -Account Page
    -Login
    -Register
    -Forms page

Set-up classes
    -Forms
    -Models

Blueprint APP


Changed VirtualEnv to VENV (thirdparty => python standard)
We use dotenv to load up .env files

.ENV credentials here:
FLASK_ENV=development
-- Any key
SECRET_KEY=""
DATABASE_URL="Dummyfile"
-- Get it from the production service
S3_BUCKET_NAME=""
S3_REGION=""
S3_IMAGE_PATH=""



# TODO: EDIT THIS
Deployment:
Heroku
Procfile: Gunicorn setup
SQLite to PostgreSQL


# TODO: remmber to edit this, use freeze again
Get required plugins, requirement.txt


gunicorn==20.1.0 #Deployment with heroku
certifi==2020.12.5
chardet==4.0.0
click==7.1.2
dominate==2.6.0
Flask==1.1.2 #framework
Flask-Login==0.5.0 #user login
Flask-SQLAlchemy==2.5.1 #ORM
Flask-WTF==0.14.3 #Forms
idna==2.10
itsdangerous==1.1.0
Jinja2==2.11.3 #Templates
MarkupSafe==1.1.1
requests==2.25.1 #getting api
SQLAlchemy==1.4.9 #ORM
urllib3==1.26.4 #http client
visitor==0.1.3 #json encoder
Werkzeug==1.0.1 #Hash
WTForms==2.3.3 #Forms
email-validator==1.1.2 #Email validator in forms
psycopg2-binary==2.8.6 #postgresql adapter (when deploying and migrating to postgresql)
boto3==1.17.69 #aws s3 bucket
Flask-Cors==3.0.10 #enable CORs for api requests
Flask-Migrate==3.0.0 db migration